{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;AAAA,2BAA2B;AAC3B,qCAAqC;AACrC,gDAAgD;AAChD,kCAAkC;AAClC,2CAA2C;AAC3C,sCAA+B;AAE/B,2CAAwC;AACxC,6CAA8C;AAG9C,0CAA6C;AAC7C,+CAAkD;AAClD,qDAAwD;AAExD,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,0BAA0B,CAAC,CAAC,YAAY,EAAE,CAAC;AAErE,iBAAS,EAAE;KACR,IAAI,CAAC,GAAG,EAAE;IACT,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;IACtB,GAAG,CAAC,GAAG,CAAC,eAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IAC5B,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;IAClB,GAAG,CAAC,GAAG,CACL,aAAa,CAAC;QACZ,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,GAAG,CAAC,KAAK,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;QACtC,CAAC;KACF,CAAC,CACH,CAAC;IACF,GAAG,CAAC,GAAG,CACL,IAAI,CAAC;QAIH,YAAY,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC;KACxD,CAAC,CACH,CAAC;IACF,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC;IAC3B,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;IAC1B,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC;IAC3B,GAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC,CAAC;IAE9B,GAAG,CAAC,MAAM,CAAC,gBAAM,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;QAClC,OAAO,CAAC,IAAI,CAAC,2BAA2B,EAAE,gBAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE;QACpB,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;KACD,KAAK,CAAC,GAAG,CAAC,EAAE;IACX,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC","sourcesContent":["import * as Koa from 'koa';\nimport * as helmet from 'koa-helmet';\nimport * as koaBodyparser from 'koa-bodyparser';\nimport * as cors from 'koa2-cors';\nimport * as jsonMiddleware from 'koa-json';\nimport config from '../config';\n\nimport { Logger } from './utils/logger';\nimport { bootstrap } from './bootstrap/index';\n\n// middlewares\nimport routeMiddleware from './routes/index';\nimport errorMiddleware from './middlewares/error';\nimport responseMiddleware from './middlewares/response';\n\nconst logger = new Logger('koa2-typeorm-boilerplate').createLogger();\n\nbootstrap()\n  .then(() => {\n    const app = new Koa();\n    app.use(Logger.koa(logger));\n    app.use(helmet());\n    app.use(\n      koaBodyparser({\n        onerror: (err, ctx) => {\n          console.error(err);\n          ctx.throw('Cannot parse body', 422);\n        },\n      }),\n    );\n    app.use(\n      cors({\n        // TODO\n        // origin: ,\n        // allowHeaders: [],\n        allowMethods: ['GET', 'POST', 'DELETE', 'PATCH', 'PUT'],\n      }),\n    );\n    app.use(errorMiddleware());\n    app.use(jsonMiddleware());\n    app.use(routeMiddleware());\n    app.use(responseMiddleware());\n\n    app.listen(config.server.port, () => {\n      console.info('server started on port %d', config.server.port);\n    });\n\n    app.on('error', err => {\n      console.error('server error', err);\n    });\n  })\n  .catch(err => {\n    logger.fatal(err);\n  });\n"]}