{"version":3,"file":"users.js","sourceRoot":"","sources":["../../../src/controllers/users.ts"],"names":[],"mappings":";;;;;;;;;;AACA,8CAA6C;AAIhC,QAAA,MAAM,GAAG,CAAO,GAAY,EAAE,IAAgB,EAAE,EAAE;IAC3D,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,MAAM,EAAE,CAAC;IACzC,MAAM,IAAI,EAAE,CAAC;AACjB,CAAC,CAAA,CAAC;AAEW,QAAA,OAAO,GAAG,CAAO,GAAY,EAAE,IAAgB,EAAE,EAAE;IAC5D,MAAM,EAAE,GAAW,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IACjC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC5C,MAAM,IAAI,EAAE,CAAC;AACjB,CAAC,CAAA,CAAC;AAEW,QAAA,OAAO,GAAG,CAAO,GAAY,EAAE,IAAgB,EAAE,EAAE;IAC5D,MAAM,IAAI,GAAiB,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;IAC5C,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9C,MAAM,IAAI,EAAE,CAAC;AACjB,CAAC,CAAA,CAAC;AAEW,QAAA,UAAU,GAAG,CAAO,GAAY,EAAE,IAAgB,EAAE,EAAE;IAC/D,MAAM,EAAE,GAAW,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IACjC,MAAM,IAAI,GAAiB,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;IAC5C,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IACrD,MAAM,IAAI,EAAE,CAAC;AACjB,CAAC,CAAA,CAAC;AAEW,QAAA,UAAU,GAAG,CAAO,GAAY,EAAE,IAAgB,EAAE,EAAE;IAC/D,MAAM,EAAE,GAAW,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IACjC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAC/C,MAAM,IAAI,EAAE,CAAC;AACjB,CAAC,CAAA,CAAC","sourcesContent":["\nimport * as services from '../services/users'\nimport { Context } from 'koa';\nimport { IUserRequest } from '../interfaces/user';\n\nexport const getAll = async (ctx: Context, next: () => void) => {\n    ctx.state.data = await services.getAll();\n    await next();\n};\n\nexport const getById = async (ctx: Context, next: () => void) => {\n    const id: number = ctx.params.id;\n    ctx.state.data = await services.getById(id);\n    await next();\n};\n\nexport const addUser = async (ctx: Context, next: () => void) => {\n    const user: IUserRequest = ctx.request.body;\n    ctx.state.data = await services.addUser(user);\n    await next();\n};\n\nexport const updateUser = async (ctx: Context, next: () => void) => {\n    const id: number = ctx.params.id;\n    const user: IUserRequest = ctx.request.body;\n    ctx.state.data = await services.updateUser(id, user);\n    await next();\n};\n\nexport const deleteUser = async (ctx: Context, next: () => void) => {\n    const id: number = ctx.params.id;\n    ctx.state.data = await services.hardDelete(id);\n    await next();\n};\n"]}