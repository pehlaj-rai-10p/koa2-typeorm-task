{"version":3,"file":"response.js","sourceRoot":"","sources":["../../../src/middlewares/response.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uCAAuC;AAKvC,MAAM,OAAO,GAAG,CAAO,GAAY,EAAE,IAAgB,EAAE,EAAE;IACvD,GAAG,CAAC,IAAI,GAAG,EAAe,CAAC;IAC3B,GAAG,CAAC,IAAI,GAAG;QACT,IAAI,EAAE;YACJ,MAAM,EAAE,GAAG,CAAC,MAAM;YAClB,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO;SAC3B;QACD,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI;KACrB,CAAC;IACF,MAAM,IAAI,EAAE,CAAC;AACf,CAAC,CAAA,CAAC;AAEF,kBAAe,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC","sourcesContent":["import * as compose from 'koa-compose';\nimport { Context } from 'koa';\n\nimport { IResponse } from '../interfaces/response';\n\nconst handler = async (ctx: Context, next: () => void) => {\n  ctx.body = {} as IResponse;\n  ctx.body = {\n    meta: {\n      status: ctx.status,\n      message: ctx.state.message,\n    },\n    data: ctx.state.data,\n  };\n  await next();\n};\n\nexport default () => compose([handler]);\n"]}