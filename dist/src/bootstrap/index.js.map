{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/bootstrap/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,4CAAoD;AACpD,MAAM,MAAM,GAAG,0BAAiB,EAAE,CAAC;AACnC,8CAAwC;AACxC,uCAAkE;AAErD,QAAA,SAAS,GAAG,GAA2B,EAAE;IACpD,IAAI;QACF,MAAM,2BAAiB,EAAE,CAAC;QAC1B,MAAM,CAAC,IAAI,CAAC,4BAA4B,eAAM,CAAC,QAAQ,CAAC,IAAI,YAAY,eAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QAEhG,IAAI,eAAM,CAAC,GAAG,KAAK,OAAO,EAAE;YAC1B,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC9B,MAAM,4BAAkB,EAAE,CAAC;SAC5B;KACF;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,CAAC,KAAK,CAAC,iCAAiC,EAAE,GAAG,CAAC,CAAC;QACrD,MAAM,GAAG,CAAC;KACX;IACD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC/B,CAAC,CAAA,CAAC","sourcesContent":["import { getLoggerInstance } from '../utils/logger';\nconst logger = getLoggerInstance();\nimport config from '../../config/index';\nimport { bootstrapDatabase, clearDatabaseCache } from './typeorm';\n\nexport const bootstrap = async (): Promise<boolean> => {\n  try {\n    await bootstrapDatabase();\n    logger.info(`postgres connected host: ${config.database.host} , port: ${config.database.port}`);\n\n    if (config.env !== 'local') {\n      logger.info('Clearing cache');\n      await clearDatabaseCache();\n    }\n  } catch (err) {\n    logger.error('Error while connecting database', err);\n    throw err;\n  }\n  return Promise.resolve(true);\n};\n"]}