{"version":3,"file":"users.js","sourceRoot":"","sources":["../../../src/services/users.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,2BAA2B;AAC3B,6BAA6B;AAC7B,mDAAkD;AAElD,6CAA0C;AAE7B,QAAA,MAAM,GAAG,GAAQ,EAAE;IAC5B,OAAO,SAAS,CAAC,MAAM,EAAE,CAAC;AAC9B,CAAC,CAAA,CAAC;AAEW,QAAA,OAAO,GAAG,CAAO,EAAU,EAAE,EAAE;IACxC,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACzC,IAAI,CAAC,IAAI,EAAE;QACP,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;KACjC;IACD,OAAO,IAAI,CAAC;AAChB,CAAC,CAAA,CAAC;AAEW,QAAA,OAAO,GAAG,CAAO,OAAqB,EAAE,EAAE;IACnD,MAAM,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE;QACxB,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC7B,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC9B,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KACpC,EAAE,EAAE,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC;IAC1B,MAAM,OAAO,GAAG,IAAI,aAAK,EAAE,CAAC;IAC5B,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;IAC5B,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;IAC9B,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;IACpC,MAAM,SAAS,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAClD,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAA,CAAC;AAEW,QAAA,UAAU,GAAG,CAAO,EAAU,EAAE,OAAqB,EAAE,EAAE;IAClE,MAAM,GAAG,CAAC,QAAQ,mBAAM,OAAO,IAAE,EAAE,KAAI;QACnC,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC3B,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KAChC,CAAC,CAAC;IAEH,MAAM,SAAS,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IACtD,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAA,CAAC;AAEW,QAAA,UAAU,GAAG,CAAO,EAAU,EAAE,EAAE;IAC3C,MAAM,IAAI,GAAG,MAAM,eAAO,CAAC,EAAE,CAAC,CAAC;IAC/B,MAAM,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAChD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC7B,CAAC,CAAA,CAAC;AAEW,QAAA,UAAU,GAAG,CAAO,EAAU,EAAE,EAAE;IAC3C,MAAM,IAAI,GAAG,MAAM,eAAO,CAAC,EAAE,CAAC,CAAC;IAC/B,MAAM,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAC/B,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC7B,CAAC,CAAA,CAAC","sourcesContent":["import * as joi from 'joi';\nimport * as boom from 'boom';\nimport * as usersRepo from '../repositories/users'\nimport { IUserRequest } from '../interfaces/user';\nimport { Users } from '../entities/users';\n\nexport const getAll = async() => {\n    return usersRepo.getAll();\n};\n\nexport const getById = async (id: number) => {\n    const user = await usersRepo.getById(id);\n    if (!user) {\n        boom.badRequest('Invalid id');\n    }\n    return user;\n};\n\nexport const addUser = async (payload: IUserRequest) => {\n    await joi.validate(payload, {\n        name: joi.string().required(),\n        email: joi.string().required(),\n        password: joi.string().required(),\n    }, { allowUnknown: true});\n    const newUser = new Users();\n    newUser.name = payload.name;\n    newUser.email = payload.email;\n    newUser.password = payload.password;\n    const savedUser = await usersRepo.insert(newUser);\n    return savedUser[0];\n};\n\nexport const updateUser = async (id: number, payload: IUserRequest) => {\n    await joi.validate({ ...payload, id }, {\n        id: joi.number().required(),\n        name: joi.string().required(),\n    });\n    //await getById(id);\n    const savedUser = await usersRepo.update(id, payload);\n    return savedUser[0];\n};\n\nexport const softDelete = async (id: number) => {\n    const user = await getById(id);\n    await usersRepo.update(id, { isDeleted: true });\n    return { success: true };\n};\n\nexport const hardDelete = async (id: number) => {\n    const user = await getById(id);\n    await usersRepo.hardDelete(id);\n    return { success: true };\n};"]}