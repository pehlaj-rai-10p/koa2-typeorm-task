{"version":3,"file":"heroes.js","sourceRoot":"","sources":["../../../src/services/heroes.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,2BAA0B;AAC1B,+CAA8C;AAE9C,+CAA4C;AAE/B,QAAA,MAAM,GAAG,GAAQ,EAAE;IAC5B,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;AACzB,CAAC,CAAA,CAAC;AAEW,QAAA,OAAO,GAAG,CAAO,IAAkB,EAAE,EAAE;IAChD,MAAM,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE;QACrB,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KAChC,CAAC,CAAC;IACH,MAAM,UAAU,GAAG,IAAI,eAAM,EAAE,CAAC;IAChC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACjC,CAAC,CAAA,CAAC;AAEW,QAAA,UAAU,GAAG,CAAO,IAAkB,EAAE,EAAE;IACnD,MAAM,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE;QACrB,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KAChC,EAAE,EAAE,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC;IAC1B,MAAM,UAAU,GAAG,IAAI,eAAM,EAAE,CAAC;IAChC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;IACxB,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACjC,CAAC,CAAA,CAAC;AAEW,QAAA,UAAU,GAAG,CAAO,EAAU,EAAE,EAAE;IAC3C,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;AAC/B,CAAC,CAAA,CAAC","sourcesContent":["import * as joi from 'joi'\nimport * as repo from '../repositories/heroes'\nimport { IHeroRequest } from '../interfaces/hero';\nimport { Heroes } from '../entities/heroes';\n\nexport const getAll = async() => {\n    return repo.getAll();\n};\n\nexport const addhero = async (hero: IHeroRequest) => {\n    await joi.validate(hero, {\n        name: joi.string().required(),\n    });\n    const toSaveHero = new Heroes();\n    toSaveHero.name = hero.name;\n    return repo.save(toSaveHero);\n};\n\nexport const updatehero = async (hero: IHeroRequest) => {\n    await joi.validate(hero, {\n        name: joi.string().required(),\n    }, { allowUnknown: true});\n    const toSaveHero = new Heroes();\n    toSaveHero.id = hero.id;\n    toSaveHero.name = hero.name;\n    return repo.save(toSaveHero);\n};\n\nexport const deletehero = async (id: number) => {\n    return repo.deleteHero(id);\n};\n\n\n/*\nimport * as boom from 'boom';\nimport * as joi from 'joi';\nimport * as heroesRepo from '../repositories/heroes';\nimport { Heroe } from '../entities/heroes';\nimport { IHeroRequest } from '../interfaces/hero';\n\nexport const getAll = async () => {\n    return heroesRepo.getAll();\n};\n\nexport const getById = async (id: number) => {\n    const hero = await heroesRepo.getById(id);\n    if (!hero) {\n        boom.badRequest('Invalid id');\n    }\n    return hero;\n};\n\nexport const addHero = async (payload: IHeroRequest) => {\n    await joi.validate(payload, {\n        name: joi.string().required()\n    });\n    const hero = new Heroe();\n    hero.name = payload.name;\n    const savedHero = await heroesRepo.insert(hero);\n    return savedHero[0];\n};\n\nexport const updateHero = async (id: number, payload: IHeroRequest) => {\n    await joi.validate({ ...payload, id }, {\n        id: joi.number().required(),\n        name: joi.string().required()\n    });\n    await getById(id);\n    const savedHero = await heroesRepo.update(id, payload);\n    return savedHero[0];\n};\n\nexport const softDelete = async (id: number) => {\n    const hero = await getById(id);\n    await heroesRepo.update(id, { isDeleted: true });\n    return { success: true };\n};\n\nexport const hardDelete = async (id: number) => {\n    const hero = await getById(id);\n    await heroesRepo.hardDelete(id);\n    return { success: true };\n};\n\n*/"]}